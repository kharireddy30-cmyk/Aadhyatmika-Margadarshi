  - name: Ask Gemini and Get Answer
    id: gemini-api-call
    env:
      API_KEY: ${{ secrets.API_KEY }}
      PROMPT: ${{ github.event.inputs.prompt }}
    run: |
      RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${API_KEY}" \
      -H 'Content-Type: application/json' \
      -d "{\"contents\": [{\"parts\": [{\"text\": \"${PROMPT}\"}]}]}")
      
      # Use grep to extract the text, handling escaped quotes
      ANSWER=$(echo "$RESPONSE" | grep -oP '(?<="text": ")[^"]*' | head -n 1)
      
      # If grep fails, try a different parsing method
      if [ -z "$ANSWER" ]; then
          ANSWER=$(echo "$RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['candidates'][0]['content']['parts'][0]['text'])")
      fi
      
      # Escape quotes and backslashes for bash output
      ESCAPED_ANSWER=$(echo "$ANSWER" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g')
      
      # Output the answer
      echo "answer=\"$ESCAPED_ANSWER\"" >> $GITHUB_OUTPUT

  - name: Store Answer for Website
    run: |
      ANSWER="${{ steps.gemini-api-call.outputs.answer }}"
      echo "$ANSWER" > answer.txt
      echo "Answer saved to answer.txt"
      
  - name: Commit and push changes
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "github-actions[bot]@users.noreply.github.com"
      git add answer.txt
      git commit -m "Update answer.txt with new Gemini response"
      git push